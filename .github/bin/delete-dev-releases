#!/usr/bin/env python
from os import environ

import requests

if __name__ == "__main__":
    # Get all releases by paging over the endpoint.
    releases = []
    releases_page = 0
    while True:
        releases_page += 1
        releases_response = requests.get(
            f'https://api.github.com/repos/bartfeenstra/betty/releases?per_page=100&page={releases_page}',
            headers={
                'Accept': 'application/vnd.github.v3+json',
                'Authorization': f'Bearer {environ["GITHUB_TOKEN"]}',
            },
        )
        releases_response.raise_for_status()
        page_releases = releases_response.json()
        if not page_releases:
            break
        releases += page_releases

    for release in releases:
        # Ignore non-development releases.
        if not release['tag_name'].endswith('-dev'):
            continue

        dev_release_branch_name = release['tag_name'][:-4]

        # Ignore this release if a corresponding branch exists.
        dev_branch_response = requests.get(
            f'https://api.github.com/repos/bartfeenstra/betty/branches/{dev_release_branch_name}',
            headers={
                'Accept': 'application/vnd.github.v3+json',
            },
        )
        if dev_branch_response.status_code != 404:
            continue

        requests.delete(
            f'https://api.github.com/repos/bartfeenstra/betty/releases/{release["id"]}',
            headers={
                'Authorization': f'Bearer {environ["GITHUB_TOKEN"]}',
            },
        ).raise_for_status()
